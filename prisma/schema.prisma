// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  Int @id @default(autoincrement())
  type String @default("user")
  cpf String @db.VarChar(11) @unique
  user_name String
  email String @unique
  phone String  @db.VarChar(11)
  photo String? 
  password  String
  
  address_id Int
  address Address @relation(fields: [address_id], references: [id])


  created_at DateTime @default(now())
  updated_at DateTime @updatedAt


  Favorite Favorite[]
  Assessment Assessment[]
  Session Session[]

@@unique([address_id])
@@map("users")
}

model Address {
  id  Int @id @default(autoincrement())
  zip_code  String @db.VarChar(8)
  street  String
  number String
  complement String?
  district String
  city String
  state String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt


  User User[]
  Business Business[]

@@map("adresses")
}

model Business {
  id  Int @id @default(autoincrement())
  type String @default("business")
  title String
  sub_title String
  logo String

  photos_id Int
  photos Photograph @relation(fields: [photos_id], references: [id])

  category_id Int
  category Category @relation(fields: [category_id], references: [id])

  address_id Int
  address Address @relation(fields: [address_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  favorites Favorite[]
  assessments Assessment[]
  services Service[]

@@unique([photos_id, category_id, address_id])
@@map("business")
}

model Category {
  id  Int @id @default(autoincrement())
  label String
  type String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt


  Business Business[]
  Service Service[]

@@map("categories")
}

model Service {
  id  Int @id @default(autoincrement())
  name String
  description String
  price Int @default(0)

  category_id Int
  category Category @relation(fields: [category_id], references: [id])

  business_id Int
  business Business @relation(fields: [business_id], references: [id])
  

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

@@unique([category_id])
@@map("services")
}

model Photograph {
  id  Int @id @default(autoincrement())
  a String
  b String
  c String
  d String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt


  Business Business[]

@@map("photographs")
}

model Favorite {
  id  Int @id @default(autoincrement())

  user_id Int
  user User @relation(fields: [user_id], references: [id])

  business_id Int
  business Business @relation(fields: [business_id], references: [id])


  created_at DateTime @default(now())
  updated_at DateTime @updatedAt


@@map("favorites")
}

model Assessment {
  id  Int @id @default(autoincrement())
  
  user_id Int
  user User @relation(fields: [user_id], references: [id])

  business_id Int
  business Business @relation(fields: [business_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt


@@map("assessments")
}

model Session {
  id  Int @id @default(autoincrement())
  
  user_id Int
  user User @relation(fields: [user_id], references: [id])

  token String


  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

@@unique([user_id])
@@map("sessions")
}